name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review, converted_to_draft ]
  workflow_dispatch:
    inputs:
      linting:
        type: boolean
        description: Run the linter
        required: false
        default: true
      runCodeCoverage:
        type: boolean
        description: Run code coverage
        required: false
        default: true

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check Project Integrity
    runs-on: [ self-hosted, linux ]
    env:
      RUN_CODE_COVERAGE:
        ${{
          github.event.inputs.runCodeCoverage == true ||
          github.event.pull_request.draft == false ||
          github.event_name == 'push'
        }}
      RUN_LINTING:
        ${{
          github.event.inputs.linting == true ||
          github.event.pull_request.draft == false
        }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt

      - name: Cargo Format
        uses: actions-rs/cargo@v1
        if: env.RUN_LINTING == 'true'
        with:
          command: fmt
          args: --all -- --check

      - name: Cargo Clippy
        uses: actions-rs/cargo@v1
        if: env.RUN_LINTING == 'true'
        with:
          command: clippy

      - name: Cargo Tarpaulin XML Report
        uses: actions-rs/tarpaulin@v0.1
        if: env.RUN_CODE_COVERAGE == 'true'
        with:
          version: '0.19.1'
          out-type: Xml
          args: '--ignore-config --ignore-tests'

      - name: Archive Code Coverage Results
        uses: actions/upload-artifact@v3
        if: env.RUN_CODE_COVERAGE == 'true'
        with:
          name: code-coverage-report
          path: cobertura.xml
